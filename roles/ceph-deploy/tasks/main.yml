---
- name: Setup initial Ceph configuration
  block:
    - name: Determine the sudo group name based on the distribution
      set_fact:
        sudo_group: "{{ 'wheel' if ansible_facts['os_family'] == 'RedHat' else 'sudo' }}"

    - name: Add SSH user to the appropriate sudo group
      ansible.builtin.user:
        name: "{{ ssh_user }}"
        groups: "{{ sudo_group }}"
        append: yes

    - name: Add SSH user to the docker group
      ansible.builtin.user:
        name: "{{ ssh_user }}"
        groups: docker
        append: yes
      when: ansible_facts['os_family'] != 'RedHat'

    - name: Set hostname for each client host via SSH
      ansible.builtin.command: 
        cmd: "ssh -i {{ ssh_key_private }} -o StrictHostKeyChecking=no {{ ssh_user }}@{{ item }} 'sudo hostnamectl set-hostname {{ item }}'"
      loop: "{{ groups['clients'] }}"
      loop_control:
        loop_var: item
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Create a temporary Ceph configuration file
      copy:
        dest: "{{ ceph_config_file_path }}"
        content: |
          [global]
          osd crush chooseleaf type = {{ ceph_config.global.osd_crush_chooseleaf_type }}
          osd_pool_default_size = {{ ceph_config.global.osd_pool_default_size }}

    - name: Check if temporary Ceph configuration file exists
      ansible.builtin.stat:
        path: "{{ ceph_config_file_path }}"
      register: config_file_stat
      until: config_file_stat.stat.exists
      retries: 5
      delay: 2

    - name: Fail if temporary Ceph configuration file does not exist
      ansible.builtin.fail:
        msg: "Temporary Ceph configuration file not found."
      when: not config_file_stat.stat.exists

    - name: Bootstrap the Ceph cluster
      ansible.builtin.shell: |
        cephadm bootstrap --mon-ip {{ hostvars[groups['admin'][0]]['ansible_host'] }} \
        --cluster-network {{ cluster_network }} \
        --ssh-user {{ ssh_user }} \
        -c {{ ceph_config_file_path }} \
        --allow-overwrite --log-to-file

    - name: Distribute Cephadm SSH keys to all hosts
      include_tasks: distribute_ssh_keys.yml
      vars:
        cephadm_ssh_user: "{{ ssh_user }}"
        cephadm_pubkey_path: "{{ ssh_key }}"

    - name: Add and label hosts in the Ceph cluster
      include_tasks: add_host_and_label.yml

    - name: Prepare and add OSDs
      pause:
        seconds: 60

    # - name: Add OSDs and Ensure They Are Ready
    #   include_tasks: add_osds_and_wait.yml

    - name: Include OSD addition tasks for each host in the osds group
      include_tasks: add_osd.yml
      loop: "{{ groups['osds'] }}"
      loop_control:
        loop_var: host
      vars:
        osd_devices: "{{ hostvars[host]['osd_devices'] }}"
      when: "'osd_devices' in hostvars[host]"

    - name: Label all OSD hosts with '_no_schedule'
      pause:
        seconds: 10

    - name: Apply '_no_schedule' Label to OSD Hosts
      include_tasks: label_osd_hosts_no_schedule.yml

    - name: Cleanup
      file:
        path: "{{ temp_config_file.path }}"
        state: absent
      when: temp_config_file is defined
